name: Test

on:
  - push
  - pull_request

jobs:
  test:
    name: "Ruby ${{ matrix.ruby-version }}: ${{ matrix.mysql-source-backend }}"
    timeout-minutes: 10
    strategy:
      fail-fast: false
      matrix:
        ruby-version:
          - "2.6"
          - "2.7"
          - "3.0"
          - "3.1"
        runs-on:
          # - macos-latest
          - ubuntu-latest
          # - windows-latest
    runs-on: ${{ matrix.runs-on }}
    steps:
      - uses: actions/checkout@v2
      - name: Install the latest mariadb-connector-c
        run: |
          set -x
          sudo apt-get update
          dpkg -l | grep 'mysql\|mariadb' || :
          sudo apt-get purge -y -V \
            libmysqlclient\*
          sudo apt-get install -y -V \
            cmake \
            git \
            ninja-build
          git config --global user.name "groonga"
          git config --global user.email "groonga@groonga.org"
          git clone \
            --branch 3.3 \
            https://github.com/mariadb-corporation/mariadb-connector-c.git
          cmake \
            -S mariadb-connector-c \
            -B mariadb-connector-c.build \
            -G Ninja \
            -DCMAKE_BUILD_TYPE=Release \
            -DCMAKE_INSTALL_PREFIX=/usr \
            -DINSTALL_LIBDIR=lib \
            -DWITH_EXTERNAL_ZLIB=ON \
            -DWITH_UNIT_TESTS=OFF
          ninja -C mariadb-connector-c.build
          sudo ninja -C mariadb-connector-c.build install
          rm -rf mariadb-connector-c*
      - name: Install Apache Arrow
        run: |
          sudo apt update
          sudo apt -y -V install \
            ca-certificates \
            lsb-release \
            wget
          wget https://apache.jfrog.io/artifactory/arrow/$(lsb_release --id --short | tr 'A-Z' 'a-z')/apache-arrow-apt-source-latest-$(lsb_release --codename --short).deb
          sudo apt install -y -V ./apache-arrow-apt-source-latest-$(lsb_release --codename --short).deb
          sudo apt update
          sudo apt -y -V install \
            libgirepository1.0-dev \
            libparquet-glib-dev
      - uses: ruby/setup-ruby@v1
        with:
          ruby-version: ${{ matrix.ruby-version }}
          bundler-cache: true
          cache-version: 1
      - name: Test
        run: |
          bundle exec ruby test/run.rb
